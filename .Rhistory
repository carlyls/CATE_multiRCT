library(lme4)
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
n_mean=c(500),
n_sd=c(0),
study_mean=c(0),
study_inter_mean=c(0),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1", "3,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0, study_sd=NA, study_inter_sd=NA, scenario=2))
settings <- do.call("rbind", replicate(1000, settings_ind, simplify = FALSE)) %>%
cbind(iteration = rep(1:1000, each=11))
i=1
iteration <- settings$iteration[i]
K <- settings$K[i]
n_mean <- settings$n_mean[i]
n_sd <- settings$n_sd[i]
study_mean <- settings$study_mean[i]
study_inter_mean <- settings$study_inter_mean[i]
study_sd <- settings$study_sd[i]
study_inter_sd <- settings$study_inter_sd[i]
scenario <- settings$scenario[i]
seed <- i + 100000
honesty <- F
#now code
source("Comparing_methods_functions.R", local=T)
#generate data
sim_dat <- gen_data(K, n_mean, n_sd, study_mean, study_inter_mean,
study_sd, study_inter_sd, scenario)
all_dat <- data.frame()
n_study <- floor(rnorm(K, mean=n_mean, sd=n_sd))
if (scenario %in% c("1a","1b")) {
study_main <- rnorm(K, mean=study_mean, sd=study_sd)
study_inter <- rnorm(K, mean=study_inter_mean, sd=study_inter_sd)
}
for (k in 1:K) {
n <- n_study[k]
#sample covariates
dat <- data.frame(matrix(rnorm(n*ncovar), nrow=n, ncol=ncovar))
colnames(dat) <- paste0("X", seq(1,ncovar))
#treatment
dat$W <- rbinom(n, size=1, prob=0.5)
#study and id
dat$S <- rep(k, n)
dat$id <- seq(1, n)
#noise
dat$eps <- rnorm(n, mean=0, sd=sd)
all_dat <- bind_rows(all_dat, dat)
}
#tau and Y
if (scenario == "1a") {
all_dat$m <- all_dat$X1/2 + all_dat$X2 + all_dat$X3 + all_dat$X4 +
study_main[all_dat$S] + study_inter[all_dat$S]*all_dat$X1
all_dat$tau <- all_dat$X1*(all_dat$X1>0) + study_main[all_dat$S] +
study_inter[all_dat$S]*all_dat$X1
}
if (scenario == "1b") {
all_dat$m <- 0
all_dat$tau <- (2/(1+exp(-12*(all_dat$X1-1/2))))*(2/(1+exp(-12*(all_dat$X2-1/2)))) +
study_main[all_dat$S] + study_inter[all_dat$S]*all_dat$X1
}
if (scenario == "2") {
all_dat$m <- all_dat$X1/2 + all_dat$X2 + all_dat$X3 + all_dat$X4
all_dat$tau <- ifelse(all_dat$S %in% c(1:4), (2/(1+exp(-12*(all_dat$X1-1/2))))*(2/(1+exp(-12*(all_dat$X2-1/2)))),
ifelse(all_dat$S %in% c(5:8), all_dat$X1*(all_dat$X1>0), 0))
}
all_dat$Y <- all_dat$m + (2*all_dat$W-1)/2*all_dat$tau + all_dat$eps
all_dat <- all_dat %>%
select(-eps,-m) %>%
mutate(S = factor(S)) %>%
relocate(S, id, W, X1, X2, X3, X4, X5, Y, tau)
n
gen_data <- function (K, n_mean, n_sd, study_mean, study_inter_mean,
study_sd, study_inter_sd, scenario,
ncovar=5, sd=sqrt(0.01)) {
all_dat <- data.frame()
n_study <- floor(rnorm(K, mean=n_mean, sd=n_sd))
if (scenario %in% c("1a","1b")) {
study_main <- rnorm(K, mean=study_mean, sd=study_sd)
study_inter <- rnorm(K, mean=study_inter_mean, sd=study_inter_sd)
}
for (k in 1:K) {
n <- n_study[k]
#sample covariates
dat <- data.frame(matrix(rnorm(n*ncovar), nrow=n, ncol=ncovar))
colnames(dat) <- paste0("X", seq(1,ncovar))
#treatment
dat$W <- rbinom(n, size=1, prob=0.5)
#study and id
dat$S <- rep(k, n)
dat$id <- seq(1, n)
#noise
dat$eps <- rnorm(n, mean=0, sd=sd)
all_dat <- bind_rows(all_dat, dat)
}
#tau and Y
if (scenario == "1a") {
all_dat$m <- all_dat$X1/2 + all_dat$X2 + all_dat$X3 + all_dat$X4 +
study_main[all_dat$S] + study_inter[all_dat$S]*all_dat$X1
all_dat$tau <- all_dat$X1*(all_dat$X1>0) + study_main[all_dat$S] +
study_inter[all_dat$S]*all_dat$X1
}
if (scenario == "1b") {
all_dat$m <- 0
all_dat$tau <- (2/(1+exp(-12*(all_dat$X1-1/2))))*(2/(1+exp(-12*(all_dat$X2-1/2)))) +
study_main[all_dat$S] + study_inter[all_dat$S]*all_dat$X1
}
if (scenario == "2") {
all_dat$m <- all_dat$X1/2 + all_dat$X2 + all_dat$X3 + all_dat$X4
all_dat$tau <- ifelse(all_dat$S %in% c(1:4), (2/(1+exp(-12*(all_dat$X1-1/2))))*(2/(1+exp(-12*(all_dat$X2-1/2)))),
ifelse(all_dat$S %in% c(5:8), all_dat$X1*(all_dat$X1>0), 0))
}
all_dat$Y <- all_dat$m + (2*all_dat$W-1)/2*all_dat$tau + all_dat$eps
all_dat <- all_dat %>%
select(-eps,-m) %>%
mutate(S = factor(S)) %>%
relocate(S, id, W, X1, X2, X3, X4, X5, Y, tau)
return(all_dat)
}
#generate data
sim_dat <- gen_data(K, n_mean, n_sd, study_mean, study_inter_mean,
study_sd, study_inter_sd, scenario)
covars <- grep("^X", names(sim_dat), value=TRUE)
feat <- select(sim_dat, c(S,all_of(covars))) %>%
fastDummies::dummy_cols(select_columns="S", remove_selected_columns=T)
feat_nostudy <- select(sim_dat, all_of(covars))
tr <- sim_dat$W
y <- sim_dat$Y
tau_true <- sim_dat$tau
#no study
tau_forest_nostudy <- causal_forest(X=feat_nostudy, Y=y, W=tr, num.threads=3, honesty=honesty, num.trees=1000)
tau_forest_nostudy$predictions
-> a
tau_forest_nostudy$predictions -> a
tau_hat <- predict(tau_forest)$predictions
tau_hat_nostudy <- predict(tau_forest_nostudy)$predictions
View(cbind(a, tau_hat_nostudy))
all.equal(cbind(a, tau_hat_nostudy))
all.equal(a, tau_hat_nostudy)
sum(a-tau_hat_nostudy==0)
#study indicator
tau_forest <- causal_forest(X=feat, Y=y, W=tr, num.threads=3, honesty=honesty, num.trees=1000)
tau_hat <- predict(tau_forest)$predictions
tau_hat2 <- tau_forest$predictions
sum(tau_hat-tau_hat2==0)
head(tau_hat)
head(tau_hat2)
causal_studyind <- mean((tau_hat - tau_true)^2)
causal_studyind2 <- mean((tau_hat2 - tau_true)^2)
causal_studyind
causal_studyind2
aug_data <- c()
k=1
#fit model to study
df <- filter(sim_dat, S==k)
fit <- grf::causal_forest(X=select(df,all_of(covars)), Y=df$Y, W=df$W, num.threads=3, honesty=honesty, num.trees=1000)
nrow(df)
fit
#apply model to all data
#first get OOB predictions from same site (training data)
df_mod1 <- df %>%
mutate(tau_pred = fit$predictions,
Model_Site = k)
head(df_mod1)
#apply model to all data
#first get OOB predictions from same site (training data)
df_mod12 <- df %>%
mutate(tau_pred = predict(fit)$predictions,
Model_Site = k)
View(cbind(df_mod1$tau_pred, df_mod12$tau_pred))
sum(df_mod1$tau_pred- df_mod12$tau_pred ==0)
aug_data <- c()
for (k in 1:K) {
#fit model to study
df <- filter(sim_dat, S==k)
fit <- grf::causal_forest(X=select(df,all_of(covars)), Y=df$Y, W=df$W, num.threads=3, honesty=honesty, num.trees=1000)
#apply model to all data
#first get OOB predictions from same site (training data)
df_mod1 <- df %>%
mutate(tau_pred = fit$predictions,
Model_Site = k)
#then predict on rest of the sites (testing data)
other_dat <- filter(sim_dat, S!=k)
df_mod2 <- other_dat %>%
mutate(tau_pred = predict(fit, select(other_dat, all_of(covars)))$predictions,
Model_Site = k)
rm(fit)
df_mod <- rbind(df_mod1, df_mod2)
aug_data <- bind_rows(aug_data, df_mod)
}
aug_data$Model_Site <- factor(aug_data$Model_Site)
nrow(aug_data)
View(aug_data)
aug_data$tau_pred
fit$predictions
#fit model to study
df <- filter(sim_dat, S==k)
fit <- grf::causal_forest(X=select(df,all_of(covars)), Y=df$Y, W=df$W, num.threads=3, honesty=honesty, num.trees=1000)
fit$predictions
c(fit$predictions)
#apply model to all data
#first get OOB predictions from same site (training data)
df_mod1 <- df %>%
mutate(tau_pred = c(fit$predictions),
Model_Site = k)
#then predict on rest of the sites (testing data)
other_dat <- filter(sim_dat, S!=k)
df_mod2 <- other_dat %>%
mutate(tau_pred = predict(fit, select(other_dat, all_of(covars)))$predictions,
Model_Site = k)
aug_data <- c()
df_mod <- rbind(df_mod1, df_mod2)
aug_data <- bind_rows(aug_data, df_mod)
View(aug_data)
sum(aug_data$tau_pred-predict(fit)$predictions==0)
tau_hat_nostudy <- c(tau_forest_nostudy$predictions)
tau_hat_nostudy
causal_studyind
tau_hat <- c(tau_forest$predictions)
causal_studyind <- mean((tau_hat - tau_true)^2)
causal_studyind
tau_hat
CausalForest_aug <- function(K, sim_dat, covars, honesty) {
aug_data <- c()
for (k in 1:K) {
#fit model to study
df <- filter(sim_dat, S==k)
fit <- grf::causal_forest(X=select(df,all_of(covars)), Y=df$Y, W=df$W, num.threads=3, honesty=honesty, num.trees=1000)
#apply model to all data
#first get OOB predictions from same site (training data)
df_mod1 <- df %>%
mutate(tau_pred = c(fit$predictions),
Model_Site = k)
#then predict on rest of the sites (testing data)
other_dat <- filter(sim_dat, S!=k)
df_mod2 <- other_dat %>%
mutate(tau_pred = predict(fit, select(other_dat, all_of(covars)))$predictions,
Model_Site = k)
rm(fit)
df_mod <- rbind(df_mod1, df_mod2)
aug_data <- bind_rows(aug_data, df_mod)
}
aug_data$Model_Site <- factor(aug_data$Model_Site)
return(aug_data)
}
sim_dat_mod <- mutate(sim_dat,
Model_Site = S,
Model_Site = factor(Model_Site))
aug_data <- CausalForest_aug(K, sim_dat, covars, honesty)
View(aug_data)
## Tan method functions
EnsemTreeAll <- function(aug_data, site, covars) {
fml <- as.formula(paste("tau_pred ~ ", site, " + ", paste(covars, collapse="+")))
#adaptive ET
myfit <- rpart(fml, data=aug_data)
myfit <- prune(myfit, cp=myfit$cptable[which.min(myfit$cptable[,"xerror"]),"CP"])
return(myfit)
}
EnsemForestAll <- function(aug_data, site, covars) {
fml <- as.formula(paste("tau_pred ~ ", site, " + ", paste(covars, collapse="+")))
myfit <- ranger(fml, data=aug_data, respect.unordered.factors='order',
importance="impurity", num.threads=3)
return(myfit)
}
EnsemLassoAll <- function(aug_data, sim_dat_mod, site, covars) {
fml <- as.formula(paste(paste(" ~ ", site, " + ", paste(covars, collapse="+")),
paste(site, covars, sep="*", collapse=" + "), sep=" + "))
grid <- 10^seq(10,-2,length=100)
X <- model.matrix(fml, data=aug_data)
myfit <- glmnet(X, aug_data$tau_pred, alpha=1, lambda=grid)
cv.out <- cv.glmnet(X, aug_data$tau_pred, alpha=1)
bestlam <- cv.out$lambda.min
sim_dat_mod_matrix <- model.matrix(fml, data=sim_dat_mod)
pred_tau_lasso <- predict(myfit, s=bestlam,
newx=sim_dat_mod_matrix)
return(pred_tau_lasso)
}
#ensemble tree
et_fit <- EnsemTreeAll(aug_data, "Model_Site", covars)
et_fit
tan_pred_tau_et <- predict(et_fit,sim_dat_mod)
et_fit$predictions
predict(et_fit)
a <- predict(et_fit)[which(aug_data$S == aug_data$Model_Site)]
View(cbind(a, tan_pred_tau_et))
sum(a==tan_pred_tau_et)
View(aug_data)
#single-study no ensembling
ss_pred <- aug_data[which(aug_data$S == aug_data$Model_Site),"tau_pred"]
ss_pred
View(aug_data[which(aug_data$S == aug_data$Model_Site),])
View(sim_dat)
mse_ss <- mean((ss_pred - sim_dat$tau)^2)
mse_ss2 <- mean((ss_pred - aug_dat$tau)^2)
mse_ss2 <- mean((ss_pred - aug_data[which(aug_data$S == aug_data$Model_Site),"tau"])^2)
mse_ss
mse_ss2
#ensemble tree
et_fit <- EnsemTreeAll(aug_data, "Model_Site", covars)
tan_pred_tau_et <- predict(et_fit,sim_dat_mod)
mse_tree <- mean((tan_pred_tau_et - sim_dat$tau)^2)
rm(list = c("et_fit", "tan_pred_tau_et"))
#ensemble forest
ef_fit <- EnsemForestAll(aug_data, "Model_Site", covars)
#tan_pred_tau_ef <- predict(ef_fit,sim_dat_mod,num.threads=3)$predictions
tan_pred_tau_ef <- ef_fit$predictions[which(aug_data$S == aug_data$Model_Site)] #OOB
mse_forest <- mean((tan_pred_tau_ef - sim_dat$tau)^2)
rm(list = c("ef_fit", "tan_pred_tau_ef"))
#ensemble lasso
pred_tau_lasso <- EnsemLassoAll(aug_data, sim_dat_mod, "Model_Site", covars)
mse_lasso <- mean((pred_tau_lasso - sim_dat$tau)^2)
mse_ss
mse_lasso
mse_forest
mse_tree
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
n_mean=c(500),
n_sd=c(0),
study_mean=c(0),
study_inter_mean=c(0),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1", "3,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0, study_sd=NA, study_inter_sd=NA, scenario=2))
View(settings_ind)
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
n_mean=c(500),
n_sd=c(0),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1", "3,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0, study_sd=NA, study_inter_sd=NA, scenario=2))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1", "3,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0, study_sd=NA, study_inter_sd=NA, scenario=2))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
n_mean=c(500),
n_sd=c(0),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1", "3,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, n_mean=500, n_sd=0, study_mean=0, study_inter_mean=0, study_sd=NA, study_inter_sd=NA, scenario=2))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", study_sd=NA, study_inter_sd=NA, scenario=2))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", study_sd=NA, study_inter_sd=NA, scenario=2),
c(K=20, ns="same", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=20, ns="same", study_sd=1, study_inter_sd=0.5, scenario="1a"),
c(K=20, ns="same", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=20, ns="same", study_sd=1, study_inter_sd=0.5, scenario="1b"))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", study_sd=NA, study_inter_sd=NA, scenario=2),
c(K=20, ns="same", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=20, ns="same", study_sd=1, study_inter_sd=0.5, scenario="1a"),
c(K=20, ns="same", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=20, ns="same", study_sd=1, study_inter_sd=0.5, scenario="1b"),
c(K=10, ns="same", study_sd=NA, study_inter_sd=NA, scenario=2))
getwd()
write.csv(settings_ind, "updatedsettings_17May2023.cs")
write.csv(settings_ind, "updatedsettings_17May2023.csv")
expand.grid(K=c(10),
ns=c("same","one large","half and half"),
cov_shift=c("no"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2")))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
cov_shift=c("no"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", cov_shift="no", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="same", cov_shift="yes", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1b"))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
cov_shift=c("no"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", cov_shift="no", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="same", cov_shift="yes", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1b"))
expand.grid(K=c(10),
ns=c("same","one large","half and half"),
cov_shift=c("no"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
scenario = factor(scenario, levels=c("1a","1b","2")))
#settings matrix with all the parameters that vary in each parallel run
settings_ind <- expand.grid(K=c(10),
ns=c("same","one large","half and half"),
cov_shift=c("no"),
study_sds=c("0.5,0", "1,0", "1,0.5",
"1,1"),
scenario=c("1a","1b")) %>%
separate(study_sds, into=c("study_sd", "study_inter_sd"), sep=",") %>%
mutate(study_sd = as.numeric(study_sd),
study_inter_sd = as.numeric(study_inter_sd),
cov_shift = factor(cov_shift, levels=c("no","yes")),
scenario = factor(scenario, levels=c("1a","1b","2"))) %>%
rbind(c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1a"),
c(K=10, ns="same", cov_shift="no", study_sd=3, study_inter_sd=1, scenario="1b"),
c(K=10, ns="same", cov_shift="no", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=10, ns="same", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="one large", cov_shift="yes", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=10, ns="same", cov_shift="yes", study_sd=NA, study_inter_sd=NA, scenario="2"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1a"),
c(K=20, ns="same", cov_shift="no", study_sd=0.5, study_inter_sd=0, scenario="1b"),
c(K=20, ns="same", cov_shift="no", study_sd=1, study_inter_sd=0.5, scenario="1b"))
View(settings_ind)
